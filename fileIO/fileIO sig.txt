


'''
.login :
    #done
    fileIO.login.create("email", "password") -> add to the login table
    fileIO.login.check("email", "password") -> return true if the password is correct
    fileIO.login.remove("email", "password") -> remove from the login table and delete all question registered if the password is correct
    fileIO.login.changePassword("email", "newPassword") -> change the password associated with the account

.question : 
    #done #update newQuestion and save
    fileIO.question.newQuestion("email", title, "question", ["answers"], [tag], [correctAnswer]) -> add the question to the question table
    fileIO.question.read("questionId") -> return ['question', 'title', ['tag1','tag2',...], ['answer1','answer2',...], [correctAnswer]]
    fileIO.question.remove("questionID") -> remove the question from the question table
    fileIO.question.listByAccount("email") -> return all questionIDs created by the account
    fileIO.question.listByTag("tag") -> return all questionIDs with the given tags
    fileIO.question.listByTags([tag])
    fileIO.question.update("questionID", title, "question", ["answers"], [correctAnswer]) -> update the question in the question table
    fileIO.question.listByAccountAndTags("email","tag") -> return all questionIDs created by the account and with the given tags
    fileIO.question.isCorrect("questionID", [answersInputed]) -> return
    fileIO.question.getAllTags() -> return a list of all tags used in question

.reponses :
    fileIO.reponses.dicToList() -> transform the dic of reponses into a list of [reponses, correctAnswer] (needed for .question)
    fileIO.reponses.listToDic([reponses], [correctAnswer]) -> transform the list of reponses and the list of correctAnswer into a dic of reponses(needed for visualisation)


!!!! pour avoir l'email du compte actuellement connecté a voir où clement le range!



#done
struct question(table):
    [[account, questionID, [tags]],[....]]

static(file):
    question.txt -> account\nquestionId(loc)\ntags\n\n...
    question/
        1/
            question.txt -> question (raw text to format?)
            answers.txt -> list of answers
        2/
            ...
        ...
    


'''
