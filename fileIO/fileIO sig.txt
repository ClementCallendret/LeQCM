


'''
.login :
    #done
    fileIO.login.create("email", "password") -> add to the login table
    fileIO.login.check(["email", "password"]) -> return true if the password is correct
    fileIO.login.remove(["email", "password"]) -> remove from the login table and delete all question registered if the password is correct

#to-do
.question : 
    #done
    fileIO.question.newQuestion("email", "question", ["answers"]) -> add the question to the question table
    fileIO.question.read("questionId") -> return ['question', ['answer1','answer2',...]]
    fileIO.question.remove("questionID") -> remove the question from the question table
    #to-do
    fileIO.question.update("email", "password", "question", ["answers"]) -> update the question in the question table
    fileIO.question.listByAccount("email") -> return all questionIDs created by the account
    fileIO.question.listByTag("tag(s)") -> return all questionIDs with the given tags


#done
struct question(table):
    [[account, questionID, tag],[....]]

static(file):
    question.txt -> account\nquestionId(loc)\ntags\n\n...
    question/
        1/
            question.txt -> question (raw text to format?)
            answers.txt -> list of answers
        2/
            ...
        ...
    


'''
